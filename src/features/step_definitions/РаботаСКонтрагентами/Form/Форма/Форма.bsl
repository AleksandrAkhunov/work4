//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВСправочникеНетЭлементаСНаименованием(Парам01)","ВСправочникеНетЭлементаСНаименованием","Допустим в справочнике нет элемента с наименованием ""контрагент2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"СоздаемЭлементСправочникаСНаименованием(Парам01)","СоздаемЭлементСправочникаСНаименованием","Когда создаем элемент справочника с наименованием ""Контрагент2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЕстьЭлементСправочникаСНаименованием(Парам01)","ЕстьЭлементСправочникаСНаименованием","Тогда есть элемент справочника с наименованием ""Контрагент2""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПереименовываемЭлементСправочникаСНаименованиемВ(Парам01,Парам02)","ПереименовываемЭлементСправочникаСНаименованиемВ","Когда переименовываем элемент справочника с наименованием ""Контрагент2"" в ""Контрагент1""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВСправочникеЭлементовСНаименованиемБольше(Парам01,Парам02)","ВСправочникеЭлементовСНаименованиемБольше","Допустим в справочнике элементов с наименованием ""Контрагент1"" больше 3");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УдаляемВсеЭлементыСНаименованием(Парам01)","УдаляемВсеЭлементыСНаименованием","Когда удаляем все элементы с наименованием ""Контрагент1""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВСправочникеНетЭлементовСНаименованием(Парам01)","ВСправочникеНетЭлементовСНаименованием","Тогда в справочнике нет элементов с наименованием ""Контрагент1""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим в справочнике нет элемента с наименованием "контрагент2"
//@ВСправочникеНетЭлементаСНаименованием(Парам01)
Процедура ВСправочникеНетЭлементаСНаименованием(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Если ЕстьЭлементСНаименованием(Парам01) Тогда
		ВызватьИсключение "В справочнике контрагенты есть элемент с наименованием " + парам01;
	КонецЕсли;
//	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда создаем элемент справочника с наименованием "Контрагент2"
//@СоздаемЭлементСправочникаСНаименованием(Парам01)
Процедура СоздаемЭлементСправочникаСНаименованием(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	СоздатьЭлементСправочникаСНаименованием(Парам01);
//	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//ТОгда переименовываем элемент справочника с наименованием "Контрагент" в "Контрагент1"
//@ПереименовываемЭлементСправочникаСНаименованиемВ(Парам01,Парам02)
Процедура ПереименовываемЭлементСправочникаСНаименованиемВ(Парам01,Парам02) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ПереименоватьЭлементСправочника(Парам01, Парам02);
//	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля

&НаКлиенте
//Тогда есть элемент справочника с наименованием "Контрагент2"
//@ЕстьЭлементСправочникаСНаименованием(Парам01)
Процедура ЕстьЭлементСправочникаСНаименованием(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Если НЕ ЕстьЭлементСНаименованием(Парам01) Тогда
		ВызватьИсключение "В справочнике контрагенты есть элемент с наименованием " + парам01;
	КонецЕсли;
//	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Допустим в справочнике элементов с наименованием "Контрагент1" больше 3
//@ВСправочникеЭлементовСНаименованиемБольше(Парам01,Парам02)
Процедура ВСправочникеЭлементовСНаименованиемБольше(Парам01,Парам02) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Если КоличествоЭлементовСНаименованием(Парам01) <= Число(Парам02) Тогда
		ВызватьИсключение "Количество элементов с наименованием "+ Парам01  + " не больше " + Парам02;
	КонецЕсли;
		
//	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Когда удаляем все элементы с наименованием "Контрагент1"
//@УдаляемВсеЭлементыСНаименованием(Парам01)
Процедура УдаляемВсеЭлементыСНаименованием(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	УдалитьВсеЭлементыСНаименованием(Парам01);
//	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда в справочнике нет элементов с наименованием "Контрагент1"
//@ВСправочникеНетЭлементовСНаименованием(Парам01)
Процедура ВСправочникеНетЭлементовСНаименованием(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Если КоличествоЭлементовСНаименованием(Парам01) > 0 Тогда
		ВызватьИсключение "В справочнике контрагенты есть элементы с наименованием " + парам01;
	КонецЕсли;
//	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаСервере
Функция ЕстьЭлементСНаименованием(НаименованиеЭлемента)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наименование", НаименованиеЭлемента);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|Ссылка
	|ИЗ Справочник.Контрагенты
	|ГДЕ Наименование = &Наименование
	|";
	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой();
КонецФункции

&НаСервере
Функция КоличествоЭлементовСНаименованием(НаименованиеЭлемента)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наименование", НаименованиеЭлемента);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|Количество(Ссылка) КАК КоличествоЭлементов
	|ИЗ Справочник.Контрагенты
	|ГДЕ Наименование = &Наименование
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.КоличествоЭлементов;
КонецФункции

&НаСервере
Процедура ПереименоватьЭлементСправочника(НаименованиеДо, НаименованиеПосле)
	ТекЭлемент = Справочники.Контрагенты.НайтиПоНаименованию(НаименованиеДо);
	Если ТекЭлемент.Пустая() Тогда
		ВызватьИсключение "Не найден контрагент с наименованием " + НаименованиеДо;
	КонецЕсли;
	ТекОбъект = ТекЭлемент.ПолучитьОбъект();
	ТекОбъект.Наименование = НаименованиеПосле;
	ТекОБъект.Записать();
КонецПроцедуры

&НаСервере
Процедура УдалитьВсеЭлементыСНаименованием(НаименованиеЭлемента)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наименование", НаименованиеЭлемента);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|Ссылка
	|ИЗ Справочник.Контрагенты
	|ГДЕ Наименование = &Наименование
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ТекОбъект.Удалить();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементСправочникаСНаименованием(НаименованиеЭлемента)
	НовыйОбъект = Справочники.Контрагенты.СоздатьЭлемент();
	НовыйОбъект.Наименование = НаименованиеЭлемента;
	НовыйОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаКоличестваЭлементов(Команда)
	ВСправочникеЭлементовСНаименованиемБольше("Контрагент1","3");
КонецПроцедуры
