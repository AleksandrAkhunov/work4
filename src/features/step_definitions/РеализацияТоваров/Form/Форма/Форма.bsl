//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПодготоваливаюВспомогательныеДанныеДляПроверкиРеализации()","ЯПодготоваливаюВспомогательныеДанныеДляПроверкиРеализации","Допустим я подготоваливаю вспомогательные Данные для проверки реализации");
	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

//окончание текста модуля

&НаСервере
Функция утвПолучитьЭлементГруппуСправочника(ИмяСправочника, Код = "", Наименование = "", ИскатьГруппу = Ложь)
	ПредставлениеПоиска = "";
	
	Если Истина
		И ПустаяСтрока(Код)                      
		И ПустаяСтрока(Наименование)
		Тогда
		
		ВызватьИсключение "Не заполнено ни одно свойство поиска";
		
	ИначеЕсли Истина
		И ЗначениеЗаполнено(Код)
		И ЗначениеЗаполнено(Наименование)
		Тогда
		
		ПредставлениеПоиска = "коду """ + Код + """ и наименованию """ + Наименование + """";
		
	ИначеЕсли ЗначениеЗаполнено(Код) Тогда
		ПредставлениеПоиска = "коду """ + Код + """";
		
	ИначеЕсли ЗначениеЗаполнено(Наименование) Тогда
		ПредставлениеПоиска = "наименованию """ + Наименование + """";
		
	КонецЕсли;
	
	ТекстИсключения = "Не нашли #ГруппуИлиЭлемент справочника #ИмяСправочника по #ПредставлениеПоиска";
	
	ТекстИсключения = СтрЗаменить(ТекстИсключения, "#ГруппуИлиЭлемент", ?(ИскатьГруппу, "группу", "элемент"));
	ТекстИсключения = СтрЗаменить(ТекстИсключения, "#ИмяСправочника", ИмяСправочника);
	ТекстИсключения = СтрЗаменить(ТекстИсключения, "#ПредставлениеПоиска", ПредставлениеПоиска);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Справочник.Ссылка
	|ИЗ
	|	Справочник." + ИмяСправочника + " КАК Справочник
	|ГДЕ
	|	Справочник.ЭтоГруппа = &ИскатьГруппу
	|	" + ?(ПустаяСтрока(Код), "", "И Справочник.Код = &Код") + "
	|	" + ?(ПустаяСтрока(Наименование), "", "И Справочник.Наименование = &Наименование") + "
	|";
	
	Запрос.УстановитьПараметр("ИскатьГруппу", ИскатьГруппу);
	Запрос.УстановитьПараметр("Код", Код);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ВызватьИсключение ТекстИсключения;

	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();

	Возврат ВыборкаДетальныеЗаписи.Ссылка;
КонецФункции
 
&НаКлиенте
Функция ПолучитьПутьКФайлОтносительноКаталогоFeatures(ИмяФайлаСРасширением)
	ПутьКФайлу = "";
	
	СостояниеVanessaBehavior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	ПутьКТекущемуFeatureФайлу = СостояниеVanessaBehavior.ТекущаяФича.ПолныйПуть;
	
	ПутьКФайлу = Лев(ПутьКТекущемуFeatureФайлу, СтрНайти(ПутьКТекущемуFeatureФайлу, "features") - 1) + ИмяФайлаСРасширением;
	
	Возврат ПутьКФайлу;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакета(ИмяМакета)
	Ванесса.ЗапретитьВыполнениеШагов();
	
	НачальноеИмяФайла = ПолучитьПутьКФайлОтносительноКаталогоFeatures("tools\Выгрузка и загрузка данных XML.epf");
	
	Адрес = "";
	
	НачатьПомещениеФайла(Новый ОписаниеОповещения("ЗагрузитьFixtureИзМакетаЗавершение", ЭтотОбъект, ИмяМакета), Адрес, НачальноеИмяФайла, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьFixtureИзМакетаЗавершение(УдалосьПоместитьФайл, Адрес, ВыбранноеИмяФайла, ИмяМакета) Экспорт
	ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета);
	
	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьFixtureИзМакетаЗавершениеНаСервере(Адрес, ИмяМакета)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ВнешняяОбработка = ВнешниеОбработки.Создать(ИмяВременногоФайла, Ложь);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	
	Текст = РеквизитФормыВЗначение("Объект").ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	
	ВременныйДокумент = Новый ТекстовыйДокумент;
	ВременныйДокумент.УстановитьТекст(Текст);
	ВременныйДокумент.Записать(ИмяВременногоФайла, КодировкаТекста.UTF8);

	ВнешняяОбработка.ВыполнитьЗагрузку(ИмяВременногоФайла);
КонецПроцедуры

&НаКлиенте
//Допустим я подготоваливаю вспомогательные данные
//@ЯПодготоваливаюВспомогательныеДанные()
Процедура ЯПодготоваливаюВспомогательныеДанныеДляПроверкиРеализации() Экспорт
	УдалитьДокументыИзБазы();	
	ЗагрузитьFixtureИзМакета("Товары");
	ЗагрузитьFixtureИзМакета("Контрагенты");
	ЗагрузитьFixtureИзМакета("Покупка");
КонецПроцедуры

&НаСервере
Процедура УдалитьДокументыИзБазы()
	Для Каждого МетаданныеДокумента ИЗ Метаданные.Документы Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ Ссылка ИЗ Документ.Покупка";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Покупка", МетаданныеДокумента.Имя);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ТекОбъект.Удалить();
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры